#!/bin/bash

# ---------------------------------------------------------
# Create UEFI boot menu entries to directly boot Ubuntu kernels
# (C) 2015 Erich Boehm, License: GPLv3
# ---------------------------------------------------------
#
# REMARKS:
#  * all boot menu entries named "Ubuntu-*" are modified/deleted
#    by this script
#  * separate menu entry for grub is added as fallback option
#  * ensure that /etc/initramfs-tools/conf.d/resume is correct to
#    enable resume after hibernation (when changed rebuild
#    initramfs with 'sudo update-initramfs -u')
# ---

# make sure this script is run as root
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi

# read configuration from /etc/default
if [ -r /etc/default/uefi-boot ] ; then
  source /etc/default/uefi-boot
fi

# set default name for boot entries
UEFI_DISTRIBUTOR="${UEFI_DISTRIBUTOR:=$(lsb_release -i -s 2> /dev/null || echo Ubuntu)}"

# set default kernel boot parameters
UEFI_KERNEL_CMD_LINE="${UEFI_KERNEL_CMD_LINE:=quiet splash}"

# determine partition UUIDs
EFI_UUID="$(blkid -s UUID -o value $(df --output=source /boot/efi/ | tail -n -1))"
ROOT_UUID="$(blkid -s UUID -o value $(df --output=source / | tail -n -1))"

# determine efibootmgr disk parameters
EFIDEVICE=$(blkid -U $EFI_UUID)
EFIPART=${EFIDEVICE:(-1)}
EFIDISK=${EFIDEVICE%$EFIPART}

# make sure ubuntu subdir exists on EFI partition and go there
EFIDIR="/boot/efi/EFI/ubuntu"
mkdir -p "$EFIDIR"
cd "$EFIDIR" || exit 1

# remove existing ubuntu kernel files
rm vmlinuz-* initrd-*

# remove existing EFI boot entries named 'Ubuntu-*'
for b in $(sudo efibootmgr | egrep '^Boot[[:digit:]]{4}' | grep "$UEFI_DISTRIBUTOR-" | cut -f1 -d'*'); do
  BOOTNUM=${b##Boot}
  efibootmgr --quiet --bootnum $BOOTNUM --delete-bootnum
done

# create EFI boot menu entry for grub fallback
efibootmgr --quiet --create --disk "$EFIDISK" --part "$EFIPART" \
  --label "$UEFI_DISTRIBUTOR-grub" \
  --loader "\\EFI\\ubuntu\\shimx64.efi"

# kernel type
KERNEL_TYPE="generic"

if [ "$UEFI_INSTALL_SIGNED" = "true" ]; then
  KERNEL_TYPE="${KERNEL_TYPE}.efi.signed"
fi

# copy kernel files an create a boot entry per kernel
for f in /boot/vmlinuz-*-${KERNEL_TYPE} ; do

  # kernel version
  KV=${f##*vmlinuz-}
  KV=${KV%%-${KERNEL_TYPE}}

  # kernel file names
  KERNEL="vmlinuz-$KV"
  INITRD="initrd-$KV"

  # copy kernel files to $EFIDIR
  cp "$f" "$KERNEL"
  cp "/boot/initrd.img-$KV-generic" "$INITRD"

  # create EFI boot menu entry
  efibootmgr --quiet --create --disk "$EFIDISK" --part "$EFIPART" \
    --label "$UEFI_DISTRIBUTOR-$KV" \
    --loader "\\EFI\\ubuntu\\$KERNEL" \
    --unicode "initrd=\\EFI\\ubuntu\\$INITRD root=UUID=$ROOT_UUID ro $UEFI_KERNEL_CMD_LINE"

done

# get EFI boot entry number for last added kernel
BOOTNUM=$(efibootmgr | grep "Ubuntu-$KV" | cut -f1 -d'*')
BOOTNUM=${BOOTNUM##Boot}

# as default boot latest kernel
efibootmgr --bootorder $BOOTNUM
